apply plugin: 'groovy'
apply plugin: 'maven'

sourceCompatibility = 1.5
targetCompatibility = 1.5
defaultTasks 'clean', 'build'

// current Gaelyk version
version = '1.1'
group = 'groovyx.gaelyk'
appEngineVersion = '1.6.0'
groovyVersion = '1.8.4'

// various directory places and file names
tmpProj = "../template-project"
zipName = "${buildDir}/gaelyk-template-project-${version}.zip"
projLib = "${tmpProj}/war/WEB-INF/lib"

website = "../website"
apiDir = "${website}/war/api"
websiteLib = "${website}/war/WEB-INF/lib"

sourceSets {
    main {
        groovy {
            srcDir 'src/main'
        }
    }

    test {
        groovy {
            srcDir 'src/test'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    groovy "org.codehaus.groovy:groovy-all:$groovyVersion"
	compile "org.codehaus.groovy:groovy-all:$groovyVersion" // for maven pom generation
	compile "com.google.appengine:appengine-api-1.0-sdk:$appEngineVersion"
	compile "com.google.appengine:appengine-api-labs:$appEngineVersion"
	compile "javax.servlet:servlet-api:2.5"
	testCompile "javax.servlet.jsp:jsp-api:2.2"
	testCompile "junit:junit:4.8.2"
	testCompile "com.google.appengine:appengine-testing:$appEngineVersion"
	testCompile "com.google.appengine:appengine-api-stubs:$appEngineVersion"
}

jar {
    baseName = 'gaelyk'
    manifest {
        attributes 'Implementation-Title': 'Gaelyk', 'Implementation-Version': version
    }
    metaInf { from 'src/main/META-INF' }
}

groovydoc {
    def title = "Gaelyk ${version}"
    destinationDir = new File(apiDir)
    windowTitle = title
    docTitle = title
    link 'http://java.sun.com/javaee/5/docs/api/', 'javax.servlet.'
    link 'http://java.sun.com/j2se/1.5.0/docs/api', 'java.,org.xml.,org.xml.'
    link 'http://code.google.com/appengine/docs/java/javadoc/', 'com.google.appengine.'
    link 'http://groovy.codehaus.org/gapi/', 'org.codehaus.groovy.,groovy.'
}

task template << {
    description = "Packaging the template project"
    println "Deleting old Gaelyk JARs from the template project"

    ant.delete {
        fileset dir: projLib, includes: "gaelyk-*.jar"
    }

    println "Copying the latest Gaelyk JAR in the template project"
    ant.copy file: jar.archivePath, todir: projLib

    println "Creating the template project ZIP file"
    ant.zip basedir: tmpProj, destfile: zipName, excludes: '__MACOSX,*.iml,.DS_Store,bin/**,.gradle/**,build/**,war/WEB-INF/appengine-generated/**'
}

task dist(dependsOn: [jar, groovydoc, template]) << {
    description = "Updating the Gaelyk JAR of the website"
    println description

    ant.delete {
        fileset dir: websiteLib, includes: "gaelyk-*.jar"
    }
  
    ant.copy file: jar.archivePath, todir: websiteLib
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn:classes) {
     baseName = 'gaelyk'
     classifier = 'sources'
     from sourceSets.main.allSource
}
 
task javadocJar(type: Jar, dependsOn:groovydoc) {
     baseName = 'gaelyk'
     classifier = 'javadoc'
     from new File(apiDir)
}
 
// add javadoc/source jar tasks as artifacts
artifacts {
     archives sourcesJar
     archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.0-milestone-6"
}